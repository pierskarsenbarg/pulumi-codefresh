// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codefresh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # data getIdps
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-codefresh/sdk/go/codefresh"
//	"github.com/pulumi/pulumi-codefresh/sdk/go/codefresh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			idpAzure, err := codefresh.GetIdps(ctx, &GetIdpsArgs{
//				DisplayName: pulumi.StringRef("codefresh-onprem-tst-2"),
//				ClientType:  pulumi.StringRef("azure"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			local, err := codefresh.GetIdps(ctx, &GetIdpsArgs{
//				DisplayName: pulumi.StringRef("local"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			acc, err := codefresh.NewAccount(ctx, "acc", &codefresh.AccountArgs{
//				Features: pulumi.Any(_var.AccountFeatures),
//				Limits: AccountLimitArray{
//					&AccountLimitArgs{
//						Collaborators:      pulumi.Int(25),
//						DataRetentionWeeks: pulumi.Int(5),
//					},
//				},
//				Builds: AccountBuildArray{
//					&AccountBuildArgs{
//						Parallel: pulumi.Int(25),
//						Nodes:    pulumi.Int(7),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = codefresh.NewUser(ctx, "user1", &codefresh.UserArgs{
//				Email:    pulumi.String("user1@example.com"),
//				UserName: pulumi.String("user1"),
//				Activate: pulumi.Bool(true),
//				Roles: pulumi.StringArray{
//					pulumi.String("Admin"),
//					pulumi.String("User"),
//				},
//				Logins: UserLoginArray{
//					&UserLoginArgs{
//						IdpId: pulumi.String(idpAzure.Id),
//						Sso:   pulumi.Bool(true),
//					},
//					&UserLoginArgs{
//						IdpId: pulumi.String(local.Id),
//					},
//				},
//				Personal: &UserPersonalArgs{
//					FirstName: pulumi.String("John"),
//					LastName:  pulumi.String("Smith"),
//				},
//				Accounts: pulumi.StringArray{
//					acc.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = codefresh.NewIdpAccounts(ctx, "accIdp", &codefresh.IdpAccountsArgs{
//				IdpId: pulumi.String(idpAzure.Id),
//				AccountIds: pulumi.StringArray{
//					acc.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIdps(ctx *pulumi.Context, args *GetIdpsArgs, opts ...pulumi.InvokeOption) (*GetIdpsResult, error) {
	var rv GetIdpsResult
	err := ctx.Invoke("codefresh:index/getIdps:getIdps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIdps.
type GetIdpsArgs struct {
	_id         *string `pulumi:"_id"`
	ClientName  *string `pulumi:"clientName"`
	ClientType  *string `pulumi:"clientType"`
	DisplayName *string `pulumi:"displayName"`
}

// A collection of values returned by getIdps.
type GetIdpsResult struct {
	_id          *string  `pulumi:"_id"`
	AccessToken  string   `pulumi:"accessToken"`
	Accounts     []string `pulumi:"accounts"`
	AppId        string   `pulumi:"appId"`
	ClientHost   string   `pulumi:"clientHost"`
	ClientId     string   `pulumi:"clientId"`
	ClientName   *string  `pulumi:"clientName"`
	ClientSecret string   `pulumi:"clientSecret"`
	ClientType   *string  `pulumi:"clientType"`
	CookieIv     string   `pulumi:"cookieIv"`
	CookieKey    string   `pulumi:"cookieKey"`
	DisplayName  *string  `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id     string   `pulumi:"id"`
	Scopes []string `pulumi:"scopes"`
	Tenant string   `pulumi:"tenant"`
}

func GetIdpsOutput(ctx *pulumi.Context, args GetIdpsOutputArgs, opts ...pulumi.InvokeOption) GetIdpsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIdpsResult, error) {
			args := v.(GetIdpsArgs)
			r, err := GetIdps(ctx, &args, opts...)
			var s GetIdpsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIdpsResultOutput)
}

// A collection of arguments for invoking getIdps.
type GetIdpsOutputArgs struct {
	_id         pulumi.StringPtrInput `pulumi:"_id"`
	ClientName  pulumi.StringPtrInput `pulumi:"clientName"`
	ClientType  pulumi.StringPtrInput `pulumi:"clientType"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (GetIdpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdpsArgs)(nil)).Elem()
}

// A collection of values returned by getIdps.
type GetIdpsResultOutput struct{ *pulumi.OutputState }

func (GetIdpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdpsResult)(nil)).Elem()
}

func (o GetIdpsResultOutput) ToGetIdpsResultOutput() GetIdpsResultOutput {
	return o
}

func (o GetIdpsResultOutput) ToGetIdpsResultOutputWithContext(ctx context.Context) GetIdpsResultOutput {
	return o
}

func (o GetIdpsResultOutput) _id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdpsResult) *string { return v._id }).(pulumi.StringPtrOutput)
}

func (o GetIdpsResultOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.AccessToken }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIdpsResult) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

func (o GetIdpsResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.AppId }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) ClientHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.ClientHost }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) ClientName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdpsResult) *string { return v.ClientName }).(pulumi.StringPtrOutput)
}

func (o GetIdpsResultOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) ClientType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdpsResult) *string { return v.ClientType }).(pulumi.StringPtrOutput)
}

func (o GetIdpsResultOutput) CookieIv() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.CookieIv }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) CookieKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.CookieKey }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdpsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIdpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIdpsResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIdpsResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o GetIdpsResultOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdpsResult) string { return v.Tenant }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIdpsResultOutput{})
}
