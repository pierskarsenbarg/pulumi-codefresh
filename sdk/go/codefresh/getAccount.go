// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codefresh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # account data module
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-codefresh/sdk/go/codefresh"
//	"github.com/pulumi/pulumi-codefresh/sdk/go/codefresh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			acc, err := codefresh.LookupAccount(ctx, &GetAccountArgs{
//				Name: pulumi.StringRef("acc1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = codefresh.NewUser(ctx, "user1", &codefresh.UserArgs{
//				Email:    pulumi.String("user1@example.com"),
//				UserName: pulumi.String("user1"),
//				Accounts: pulumi.StringArray{
//					pulumi.String(acc.Id),
//				},
//				Activate: pulumi.Bool(true),
//				Roles: pulumi.StringArray{
//					pulumi.String("Admin"),
//					pulumi.String("User"),
//				},
//				Logins: UserLoginArray{
//					&UserLoginArgs{
//						IdpId: pulumi.Any(data.Codefresh_idps.Idp_azure.Id),
//						Sso:   pulumi.Bool(true),
//					},
//					&UserLoginArgs{
//						IdpId: pulumi.Any(data.Codefresh_idps.Local.Id),
//					},
//				},
//				Personal: &UserPersonalArgs{
//					FirstName: pulumi.String("John"),
//					LastName:  pulumi.String("Smith"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccount(ctx *pulumi.Context, args *LookupAccountArgs, opts ...pulumi.InvokeOption) (*LookupAccountResult, error) {
	var rv LookupAccountResult
	err := ctx.Invoke("codefresh:index/getAccount:getAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccount.
type LookupAccountArgs struct {
	_id    *string  `pulumi:"_id"`
	Admins []string `pulumi:"admins"`
	Name   *string  `pulumi:"name"`
}

// A collection of values returned by getAccount.
type LookupAccountResult struct {
	_id    *string  `pulumi:"_id"`
	Admins []string `pulumi:"admins"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
}

func LookupAccountOutput(ctx *pulumi.Context, args LookupAccountOutputArgs, opts ...pulumi.InvokeOption) LookupAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccountResult, error) {
			args := v.(LookupAccountArgs)
			r, err := LookupAccount(ctx, &args, opts...)
			var s LookupAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccountResultOutput)
}

// A collection of arguments for invoking getAccount.
type LookupAccountOutputArgs struct {
	_id    pulumi.StringPtrInput   `pulumi:"_id"`
	Admins pulumi.StringArrayInput `pulumi:"admins"`
	Name   pulumi.StringPtrInput   `pulumi:"name"`
}

func (LookupAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountArgs)(nil)).Elem()
}

// A collection of values returned by getAccount.
type LookupAccountResultOutput struct{ *pulumi.OutputState }

func (LookupAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountResult)(nil)).Elem()
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutput() LookupAccountResultOutput {
	return o
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutputWithContext(ctx context.Context) LookupAccountResultOutput {
	return o
}

func (o LookupAccountResultOutput) _id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *string { return v._id }).(pulumi.StringPtrOutput)
}

func (o LookupAccountResultOutput) Admins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []string { return v.Admins }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAccountResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountResultOutput{})
}
