// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codefresh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: StepTypes
//
// This data source allows to retrieve the published versions of a step-types
func LookupStepTypes(ctx *pulumi.Context, args *LookupStepTypesArgs, opts ...pulumi.InvokeOption) (*LookupStepTypesResult, error) {
	var rv LookupStepTypesResult
	err := ctx.Invoke("codefresh:index/getStepTypes:getStepTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStepTypes.
type LookupStepTypesArgs struct {
	// Name of the step-types to be retrieved
	Name string `pulumi:"name"`
}

// A collection of values returned by getStepTypes.
type LookupStepTypesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// A Set of `version` blocks as documented below.
	Versions []GetStepTypesVersion `pulumi:"versions"`
}

func LookupStepTypesOutput(ctx *pulumi.Context, args LookupStepTypesOutputArgs, opts ...pulumi.InvokeOption) LookupStepTypesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStepTypesResult, error) {
			args := v.(LookupStepTypesArgs)
			r, err := LookupStepTypes(ctx, &args, opts...)
			var s LookupStepTypesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStepTypesResultOutput)
}

// A collection of arguments for invoking getStepTypes.
type LookupStepTypesOutputArgs struct {
	// Name of the step-types to be retrieved
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupStepTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStepTypesArgs)(nil)).Elem()
}

// A collection of values returned by getStepTypes.
type LookupStepTypesResultOutput struct{ *pulumi.OutputState }

func (LookupStepTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStepTypesResult)(nil)).Elem()
}

func (o LookupStepTypesResultOutput) ToLookupStepTypesResultOutput() LookupStepTypesResultOutput {
	return o
}

func (o LookupStepTypesResultOutput) ToLookupStepTypesResultOutputWithContext(ctx context.Context) LookupStepTypesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStepTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStepTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupStepTypesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStepTypesResult) string { return v.Name }).(pulumi.StringOutput)
}

// A Set of `version` blocks as documented below.
func (o LookupStepTypesResultOutput) Versions() GetStepTypesVersionArrayOutput {
	return o.ApplyT(func(v LookupStepTypesResult) []GetStepTypesVersion { return v.Versions }).(GetStepTypesVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStepTypesResultOutput{})
}
