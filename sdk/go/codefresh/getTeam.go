// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codefresh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # data Team
//
// *Note*: Teams resources should be called with account specific access token
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-codefresh/sdk/go/codefresh"
//	"github.com/pulumi/pulumi-codefresh/sdk/go/codefresh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := codefresh.LookupTeam(ctx, &GetTeamArgs{
//				Name: pulumi.StringRef("users"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = codefresh.NewPermission(ctx, "permission2", &codefresh.PermissionArgs{
//				Team:     pulumi.String(admin.Id),
//				Action:   pulumi.String("create"),
//				Resource: pulumi.String("pipeline"),
//				Tags: pulumi.StringArray{
//					pulumi.String("frontend"),
//				},
//			}, pulumi.Provider(codefresh.Acc1))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTeam(ctx *pulumi.Context, args *LookupTeamArgs, opts ...pulumi.InvokeOption) (*LookupTeamResult, error) {
	var rv LookupTeamResult
	err := ctx.Invoke("codefresh:index/getTeam:getTeam", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeam.
type LookupTeamArgs struct {
	_id       *string  `pulumi:"_id"`
	AccountId *string  `pulumi:"accountId"`
	Name      *string  `pulumi:"name"`
	Tags      []string `pulumi:"tags"`
	Type      *string  `pulumi:"type"`
	Users     []string `pulumi:"users"`
}

// A collection of values returned by getTeam.
type LookupTeamResult struct {
	_id       *string `pulumi:"_id"`
	AccountId *string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id    string   `pulumi:"id"`
	Name  *string  `pulumi:"name"`
	Tags  []string `pulumi:"tags"`
	Type  *string  `pulumi:"type"`
	Users []string `pulumi:"users"`
}

func LookupTeamOutput(ctx *pulumi.Context, args LookupTeamOutputArgs, opts ...pulumi.InvokeOption) LookupTeamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTeamResult, error) {
			args := v.(LookupTeamArgs)
			r, err := LookupTeam(ctx, &args, opts...)
			var s LookupTeamResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTeamResultOutput)
}

// A collection of arguments for invoking getTeam.
type LookupTeamOutputArgs struct {
	_id       pulumi.StringPtrInput   `pulumi:"_id"`
	AccountId pulumi.StringPtrInput   `pulumi:"accountId"`
	Name      pulumi.StringPtrInput   `pulumi:"name"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
	Users     pulumi.StringArrayInput `pulumi:"users"`
}

func (LookupTeamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamArgs)(nil)).Elem()
}

// A collection of values returned by getTeam.
type LookupTeamResultOutput struct{ *pulumi.OutputState }

func (LookupTeamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamResult)(nil)).Elem()
}

func (o LookupTeamResultOutput) ToLookupTeamResultOutput() LookupTeamResultOutput {
	return o
}

func (o LookupTeamResultOutput) ToLookupTeamResultOutputWithContext(ctx context.Context) LookupTeamResultOutput {
	return o
}

func (o LookupTeamResultOutput) _id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamResult) *string { return v._id }).(pulumi.StringPtrOutput)
}

func (o LookupTeamResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTeamResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTeamResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupTeamResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTeamResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupTeamResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTeamResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o LookupTeamResultOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTeamResult) []string { return v.Users }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTeamResultOutput{})
}
