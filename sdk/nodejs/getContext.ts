// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Data Source: codefresh.Context
 *
 * This data source allows to retrieve information on any defined context
 */
export function getContext(args: GetContextArgs, opts?: pulumi.InvokeOptions): Promise<GetContextResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("codefresh:index/getContext:getContext", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getContext.
 */
export interface GetContextArgs {
    /**
     * Name of the context to be retrived
     */
    name: string;
}

/**
 * A collection of values returned by getContext.
 */
export interface GetContextResult {
    /**
     * The yaml string representing the context. Use the `yamldecode` function to access the values belonging the context.
     */
    readonly data: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * String identifying the type of extracted context. E.g. `config`, `secret`, `git.github-app`, etc.
     */
    readonly type: string;
}

export function getContextOutput(args: GetContextOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContextResult> {
    return pulumi.output(args).apply(a => getContext(a, opts))
}

/**
 * A collection of arguments for invoking getContext.
 */
export interface GetContextOutputArgs {
    /**
     * Name of the context to be retrived
     */
    name: pulumi.Input<string>;
}
