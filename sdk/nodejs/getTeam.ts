// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # data codefresh.Team
 *
 * *Note*: Teams resources should be called with account specific access token
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as codefresh from "@pierskarsenbarg/codefresh";
 * import * as codefresh from "@pulumi/codefresh";
 *
 * const admin = codefresh.getTeam({
 *     name: "users",
 * });
 * const permission2 = new codefresh.Permission("permission2", {
 *     team: admin.then(admin => admin.id),
 *     action: "create",
 *     resource: "pipeline",
 *     tags: ["frontend"],
 * }, {
 *     provider: codefresh.acc1,
 * });
 * ```
 */
export function getTeam(args?: GetTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("codefresh:index/getTeam:getTeam", {
        "_id": args._id,
        "accountId": args.accountId,
        "name": args.name,
        "tags": args.tags,
        "type": args.type,
        "users": args.users,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamArgs {
    _id?: string;
    accountId?: string;
    name?: string;
    tags?: string[];
    type?: string;
    users?: string[];
}

/**
 * A collection of values returned by getTeam.
 */
export interface GetTeamResult {
    readonly _id?: string;
    readonly accountId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly tags?: string[];
    readonly type?: string;
    readonly users?: string[];
}

export function getTeamOutput(args?: GetTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamResult> {
    return pulumi.output(args).apply(a => getTeam(a, opts))
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamOutputArgs {
    _id?: pulumi.Input<string>;
    accountId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
    users?: pulumi.Input<pulumi.Input<string>[]>;
}
