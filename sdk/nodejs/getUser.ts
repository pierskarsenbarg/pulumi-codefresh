// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## # User Data Source
 *
 * Use this data source to get the User from existing users for use in other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as codefresh from "@pierskarsenbarg/codefresh";
 * import * as codefresh from "@pulumi/codefresh";
 *
 * const admin = codefresh.getUser({
 *     email: "admin@codefresh.io",
 * });
 * const admins = new codefresh.Team("admins", {users: [
 *     admin.then(admin => admin.userId),
 *     "<ANY USER ID>",
 * ]});
 * ```
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("codefresh:index/getUser:getUser", {
        "email": args.email,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * The email of user to filter.
     */
    email: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly email: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logins: outputs.GetUserLogin[];
    readonly personals: outputs.GetUserPersonal[];
    readonly roles: string[];
    readonly shortProfiles: outputs.GetUserShortProfile[];
    readonly status: string;
    readonly userId: string;
    readonly userName: string;
}

export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply(a => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * The email of user to filter.
     */
    email: pulumi.Input<string>;
}
