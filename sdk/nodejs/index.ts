// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./account";
export * from "./accountAdmins";
export * from "./apiKey";
export * from "./context";
export * from "./getAccount";
export * from "./getContext";
export * from "./getCurrentAccount";
export * from "./getIdps";
export * from "./getRegistry";
export * from "./getStepTypes";
export * from "./getTeam";
export * from "./getUser";
export * from "./getUsers";
export * from "./idpAccounts";
export * from "./permission";
export * from "./pipeline";
export * from "./pipelineCronTrigger";
export * from "./project";
export * from "./provider";
export * from "./registry";
export * from "./stepTypes";
export * from "./team";
export * from "./user";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { Account } from "./account";
import { AccountAdmins } from "./accountAdmins";
import { ApiKey } from "./apiKey";
import { Context } from "./context";
import { IdpAccounts } from "./idpAccounts";
import { Permission } from "./permission";
import { Pipeline } from "./pipeline";
import { PipelineCronTrigger } from "./pipelineCronTrigger";
import { Project } from "./project";
import { Registry } from "./registry";
import { StepTypes } from "./stepTypes";
import { Team } from "./team";
import { User } from "./user";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "codefresh:index/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "codefresh:index/accountAdmins:AccountAdmins":
                return new AccountAdmins(name, <any>undefined, { urn })
            case "codefresh:index/apiKey:ApiKey":
                return new ApiKey(name, <any>undefined, { urn })
            case "codefresh:index/context:Context":
                return new Context(name, <any>undefined, { urn })
            case "codefresh:index/idpAccounts:IdpAccounts":
                return new IdpAccounts(name, <any>undefined, { urn })
            case "codefresh:index/permission:Permission":
                return new Permission(name, <any>undefined, { urn })
            case "codefresh:index/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            case "codefresh:index/pipelineCronTrigger:PipelineCronTrigger":
                return new PipelineCronTrigger(name, <any>undefined, { urn })
            case "codefresh:index/project:Project":
                return new Project(name, <any>undefined, { urn })
            case "codefresh:index/registry:Registry":
                return new Registry(name, <any>undefined, { urn })
            case "codefresh:index/stepTypes:StepTypes":
                return new StepTypes(name, <any>undefined, { urn })
            case "codefresh:index/team:Team":
                return new Team(name, <any>undefined, { urn })
            case "codefresh:index/user:User":
                return new User(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("codefresh", "index/account", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/accountAdmins", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/apiKey", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/context", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/idpAccounts", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/permission", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/pipeline", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/pipelineCronTrigger", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/project", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/registry", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/stepTypes", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/team", _module)
pulumi.runtime.registerResourceModule("codefresh", "index/user", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("codefresh", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:codefresh") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
